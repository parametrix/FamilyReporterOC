<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FamilyReporter" >

  <Style x:Key="datagridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock TextWrapping="Wrap" Text="{Binding}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="readOnlyDatagridStyle" TargetType="{x:Type DataGrid}">
    <Setter Property="ColumnHeaderStyle" Value="{Binding Source={StaticResource datagridColumnHeaderStyle}}" />
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="EnableColumnVirtualization" Value="False" />
    <Setter Property="EnableRowVirtualization" Value="False" />
    <Setter Property="CanUserReorderColumns" Value="False" />
    <Setter Property="ClipToBounds" Value="True" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
    <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
    <Setter Property="IsReadOnly" Value="True" />
  </Style>

  <Style x:Key="cellStyleRightJustifiedNumber" TargetType="{x:Type DataGridCell}">
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="ContentStringFormat" Value="{}{0:N0}}" />
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Padding" Value="4" />
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="8" />
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="BorderBrush" Value="WhiteSmoke" />
        <Setter Property="Padding" Value="-4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="2"
                  BorderBrush="WhiteSmoke"
                      Background="{TemplateBinding Background}"
                      CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="LightSteelBlue" />
                        </Trigger>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" Value="SlateGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="100" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="2"
                  BorderBrush="WhiteSmoke"
                      Background="{TemplateBinding Background}"
                      CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="LightSteelBlue" />
                        </Trigger>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" Value="SlateGray" />
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}" >
    <Setter Property="Margin" Value="8" />
    <Setter Property="MinHeight" Value="25"/>
    <Setter Property="MinWidth" Value="115" />
    <Setter Property="BorderBrush" Value="WhiteSmoke" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border BorderThickness="2"
                  BorderBrush="WhiteSmoke"
                      Background="{TemplateBinding Background}"
                      CornerRadius="2">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter Property="Background" Value="LightSteelBlue" />
            </Trigger>
            <Trigger Property="ToggleButton.IsMouseOver" Value="True">
              <Setter Property="Background" Value="SlateGray" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <Style x:Key="ChangeCtrlStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Content" Value="Show Table View" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Content" Value="Show Tree View" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type AccessText}" TargetType="AccessText">
        <Setter Property="Margin" Value="6,4" />
    </Style>
    
    
</ResourceDictionary>